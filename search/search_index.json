{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"license/","text":"License \u00b6 MIT License Copyright \u00a9 2019-2022 U\u011fur CORUH Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright \u00a9 2019-2022 U\u011fur CORUH Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"changelog/","text":"Changelog \u00b6 Material for Digital Logic Design \u00b6 1.0.0 _ October 20, 2020 \u00b6 Initial release","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#material-for-digital-logic-design","text":"","title":"Material for Digital Logic Design"},{"location":"changelog/#1.0.0","text":"Initial release","title":"1.0.0 _ October 20, 2020"},{"location":"syllabus/syllabus/","text":"Recep Tayyip Erdogan University \u00b6 Faculty of Engineering and Architecture \u00b6 Computer Engineering \u00b6 CE102 Digital Logic Design \u00b6 Syllabus \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Download WORD , PDF Instructor Asst. Prof. Dr. \u00c7i\u011fdem Sazak Turgut Contact Information cigdem.sazakturgut@erdogan.edu.tr Office No F-301 Google Classroom Code n24xrzo Lecture Hours and Days Theory - Monday (13:00-16:00) Lab \u2013 Thursday (10:00-12:00) Lecture Classroom D-203 Office Hours Meetings will be scheduled over Google Meet with your university account and email and performed via demand emails. Please send emails with the subject starts with [CE204] tag for the fast response and write formal, clear, and short emails. Lecture and Communication Language English Theory/Laboratory Course Hour Per Week 3/2 Hours Credit 4 Prerequisite CE103- Algorithms and Programming I CE100- Algorithms and Programming II Corequisite TBD Requirement TBD *TBD: To Be Defined. A.Course Description \u00b6 This course introduces advanced programming skills with a focus on object-oriented programming and design fundamentals using a high-level language such as Java. Object-oriented programming is the process of integrating software components into a large-scale software architecture. After learning the fundamentals of coding, this approach to software development is the next logical step, allowing for large-scale programs. The course focuses on understanding and applying object-oriented concepts such as classes, objects, data abstraction, methods, method overloading, inheritance, and polymorphism. The class will be built around sharing expertise and guiding students to find learning methods and practice for object-oriented programming topics. Making programming applications and projects in the courses will strengthen the learning process by putting theory into practice. B.Course Learning Outcomes \u00b6 After completing this course satisfactorily, a student will be able to: Design applications using OO techniques Use the unified software development process to manage software development Use UML for the notation diagrams of applications Apply useful design and architecture patterns for software development. C.Course Topics \u00b6 Object-oriented concepts Unified object-oriented analysis and design process Unified Model Language Use case analysis Object structure and behavior analysis System design Application architecture and design patterns Java implementation of object-oriented design D.Textbooks and Required Hardware or Equipment \u00b6 This course does not require a coursebook. If necessary, you can use the following books and open-source online resources. Timothy C. Lethbridge and Robert Lagani\u00e8re, Object-Oriented Software Engineering: Practical Software Development using UML and Java, McGraw Hill Walter Savitch, Absolute C++, Addison-Wesley Longman Intro to Java Programming, Comprehensive Version (10 th Edition) 10 th Edition by Y. Daniel Liang Harvey M. Deitel and Paul J. Deitel. 2001. Java How to Program (4 th . ed.). Prentice Hall PTR, USA. Paul Deitel and Harvey Deitel. 2016. Visual C# How to Program (6 th . ed.). Pearson. Additional Books TBD During this course, you should have a laptop for programming practices. You will have your development environment, and you will use this for examination and assignments also classroom practices. E.Grading System \u00b6 Midterm and Final grades will be calculated with the weighted average of the project or homework-based examinations. Midterm grades will be calculated between term beginning to the midterm week, and Final grades will be calculated between Midterm and Final week homeworks or projects as follow \\[ a_n=\\text{Homework or Project Weight} \\] \\[ HW_n=\\text{Homework or Project Points} \\] \\[ n=\\text{Number of Homework or Project} \\] \\[ Grade=(a_1HW_1+a_2HW_2+...+a_nHW_n)/n \\] Homework Weight Midterm %40 Final %60 \\[ \\text{Passing Grade}=(40*Midterm_{Grade}+60*Final_{Grade})/100 \\] $$ $$ F. Instructional Strategies and Methods \u00b6 The basic teaching method of this course will be planned to be face-to-face in the classroom, and support resources, homeworks, and announcements will be shared over google classroom. Students are expected to be in the university. This responsibility is very important to complete this course with success. If pandemic situation changes and distance education is required during this course, this course will be done using synchronous and asynchronous distance education methods. In this scenario, students are expected to be in the online platform, zoom, or meet at the time specified in the course schedule. Attendance will be taken G. Late Homework \u00b6 Throughout the semester, assignments must be submitted as specified by the announced deadline. Overdue assignments will not be accepted. Unexpected situations must be reported to the instructor for late homeworks by students H. Course Platform and Communication \u00b6 Google Classroom and Github will be used as a course learning management system. All electronic resources and announcements about the course will be shared on this platform. It is very important to check the course page daily, access the necessary resources and announcements, and communicate with the instructor to complete the course with success. I. Academic Integrity, Plagiarism & Cheating \u00b6 Academic Integrity is one of the most important principles of RTE\u00dc University. Anyone who breaches the principles of academic honesty is severely punished. It is natural to interact with classmates and others t.\"study together\". It may also be the case where a student asks to help from someone else, paid or unpaid, better understand a difficult topic or a whole course. However, what is the borderline between \"studying together\" or \"taking private lessons\" and \"academic dishonesty\"? When is it plagiarism, when is it cheating? It is obvious that looking at another student's paper or any source other than what is allowed during the exam is cheating and will be punished. However, it is known that many students come to university with very little experience concerning what is acceptable and what counts as \"copying,\"\" especially for assignments. The following are attempted as guidelines for the Faculty of Engineering and Architecture students to highlight the philosophy of academic honesty for assignments for which the student will be graded. Should a situation arise which is not described below, the student is advised to ask the instructor or assistant of the course whether what they intend to do would remain within the framework of academic honesty or not. a. What is acceptable when preparing an assignment? \u00b6 Communicating with classmates about the assignment to understand it better Putting ideas, quotes, paragraphs, small pieces of code (snippets) that you find online or elsewhere into your assignment, provided that these are not themselves the whole solution to the assignment, you cite the origins of these Asking sources for help in guiding you for the English language content of your assignment. Sharing small pieces of your assignment in the classroom to create a class discussion on some controversial topics. Turning to the web or elsewhere for instructions, references, and solutions to technical difficulties, but not for direct answers to the assignment Discuss solutions to assignments with others using diagrams or summarized statements but not actual text or code. Working with (and even paying) a tutor to help you with the course, provided the tutor does not do your assignment for you. b. What is not acceptable? \u00b6 Ask a classmate to see their solution to a problem before submitting your own. Failing to cite the origins of any text (or code for programming courses) that you discover outside of the course's lessons and integrate into your work You are giving or showing a classmate your solution to a problem when the classmate is struggling to solve it. J. Expectations \u00b6 You are expected to attend classes on time by completing weekly course requirements (readings and assignments) during the semester. The main communication channel between the instructor and the students email emailed. Please send your questions to the instructor's email address about the course via the email address provided to you by the university. Ensure that you include the course name in the subject field of your message and your name in the text field . In addition, the instructor will contact you via email if necessary. For this reason, it is very important to check your email address every day for healthy communication. K. Lecture Content and Syllabus Updates \u00b6 If deemed necessary, changes in the lecture content or course schedule can be made. If any changes are made in the scope of this document, the instructor will inform you about this. Course Schedule Overview \u00b6 Weeks Dates Subjects Other Tasks Week 1 21.02.2022-24.02.2022 Course Plan and Communication Grading System, Assignments, and Exams. Software and Software Engineering Object Orientation and OOP with Java Part-I(Classes, Objects, Methods,Inheritance,Access Modifiers,This and InstanceOf Keywords) TBD Week 2 28.02.2022-03.03.2022 OOP with Java Part-II (super keyword, final keyword, Polymorphism / Encapsulation, Method Overriding, Nested Inner Class, Static Class, Anonymous Class, Enums / Enum-Constructor / Enum-String, Abstract Class, Object Class, Forms of Inheritance, Benefits, and Costs of Inheritance, Packages, Access Protection in Packages TBD Week 3 07.03.2022-10.03.2022 OOP with Java Part-III(Defining and Interface and Interface Implementation, Nested Interfaces, Variables in Interfaces, Extending Interfaces, Reflection, Wrapper Classes, Lambda Notation) TBD Week 4 14.03.2022-17.03.2022 UML (UML tools, UML building blocks, architecture, diagrams, relationship, association, aggregation, composition comparison, association, dependency, generalization, realization, class diagram, object diagram, component diagram, deployment diagram, interaction diagram, use-case diagram, sequence diagram, collaboration diagram, state-machine diagram, activity diagram, timing diagram) TBD Week 5 21.03.2022-24.03.2022 Plantuml and Examples TBD Week-6 28.03.2022-31.03.2022 UMPLE and Examples TBD Week-7 04.04.2022-07.04.2022 UMPLE and Examples TBD Week-8 09.04.2022-17.04.2022 Midterm TBD Week-9 18.04.2022-21.04.2022 Using Design Patterns TBD Week-10 25.04.2022-28.04.2022 Using Design Patterns TBD Week-11 02.05.2022-05.05.2022 Holiday TBD Week-12 09.05.2022-12.05.2022 UML + UMPLE + Java Implementations TBD Week-13 16.05.2022-19.05.2022 SMC Remote Service Case Study Part-I TBD Week-14 23.05.2022-26.05.2022 SMC Remote Service Case Study Part-II TBD Week-15 30.05.2022-02.06.2022 OOP ATM Case Study Part-I TBD Week-16 06.06.2022-09.06.2022 OOP ATM Case Study Part-II TBD Week-17 13.06.2022-26.06.2022 Final \\(End-Of-Object-Oriented-Programming-Syllabus\\)","title":"Syllabus"},{"location":"syllabus/syllabus/#recep-tayyip-erdogan-university","text":"","title":"Recep Tayyip Erdogan University"},{"location":"syllabus/syllabus/#faculty-of-engineering-and-architecture","text":"","title":"Faculty of Engineering and Architecture"},{"location":"syllabus/syllabus/#computer-engineering","text":"","title":"Computer Engineering"},{"location":"syllabus/syllabus/#ce102-digital-logic-design","text":"","title":"CE102 Digital Logic Design"},{"location":"syllabus/syllabus/#syllabus","text":"","title":"Syllabus"},{"location":"syllabus/syllabus/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX Download WORD , PDF Instructor Asst. Prof. Dr. \u00c7i\u011fdem Sazak Turgut Contact Information cigdem.sazakturgut@erdogan.edu.tr Office No F-301 Google Classroom Code n24xrzo Lecture Hours and Days Theory - Monday (13:00-16:00) Lab \u2013 Thursday (10:00-12:00) Lecture Classroom D-203 Office Hours Meetings will be scheduled over Google Meet with your university account and email and performed via demand emails. Please send emails with the subject starts with [CE204] tag for the fast response and write formal, clear, and short emails. Lecture and Communication Language English Theory/Laboratory Course Hour Per Week 3/2 Hours Credit 4 Prerequisite CE103- Algorithms and Programming I CE100- Algorithms and Programming II Corequisite TBD Requirement TBD *TBD: To Be Defined.","title":"Spring Semester, 2021-2022"},{"location":"syllabus/syllabus/#acourse-description","text":"This course introduces advanced programming skills with a focus on object-oriented programming and design fundamentals using a high-level language such as Java. Object-oriented programming is the process of integrating software components into a large-scale software architecture. After learning the fundamentals of coding, this approach to software development is the next logical step, allowing for large-scale programs. The course focuses on understanding and applying object-oriented concepts such as classes, objects, data abstraction, methods, method overloading, inheritance, and polymorphism. The class will be built around sharing expertise and guiding students to find learning methods and practice for object-oriented programming topics. Making programming applications and projects in the courses will strengthen the learning process by putting theory into practice.","title":"A.Course Description"},{"location":"syllabus/syllabus/#bcourse-learning-outcomes","text":"After completing this course satisfactorily, a student will be able to: Design applications using OO techniques Use the unified software development process to manage software development Use UML for the notation diagrams of applications Apply useful design and architecture patterns for software development.","title":"B.Course Learning Outcomes"},{"location":"syllabus/syllabus/#ccourse-topics","text":"Object-oriented concepts Unified object-oriented analysis and design process Unified Model Language Use case analysis Object structure and behavior analysis System design Application architecture and design patterns Java implementation of object-oriented design","title":"C.Course Topics"},{"location":"syllabus/syllabus/#dtextbooks-and-required-hardware-or-equipment","text":"This course does not require a coursebook. If necessary, you can use the following books and open-source online resources. Timothy C. Lethbridge and Robert Lagani\u00e8re, Object-Oriented Software Engineering: Practical Software Development using UML and Java, McGraw Hill Walter Savitch, Absolute C++, Addison-Wesley Longman Intro to Java Programming, Comprehensive Version (10 th Edition) 10 th Edition by Y. Daniel Liang Harvey M. Deitel and Paul J. Deitel. 2001. Java How to Program (4 th . ed.). Prentice Hall PTR, USA. Paul Deitel and Harvey Deitel. 2016. Visual C# How to Program (6 th . ed.). Pearson. Additional Books TBD During this course, you should have a laptop for programming practices. You will have your development environment, and you will use this for examination and assignments also classroom practices.","title":"D.Textbooks and Required Hardware or Equipment"},{"location":"syllabus/syllabus/#egrading-system","text":"Midterm and Final grades will be calculated with the weighted average of the project or homework-based examinations. Midterm grades will be calculated between term beginning to the midterm week, and Final grades will be calculated between Midterm and Final week homeworks or projects as follow \\[ a_n=\\text{Homework or Project Weight} \\] \\[ HW_n=\\text{Homework or Project Points} \\] \\[ n=\\text{Number of Homework or Project} \\] \\[ Grade=(a_1HW_1+a_2HW_2+...+a_nHW_n)/n \\] Homework Weight Midterm %40 Final %60 \\[ \\text{Passing Grade}=(40*Midterm_{Grade}+60*Final_{Grade})/100 \\] $$ $$","title":"E.Grading System"},{"location":"syllabus/syllabus/#f-instructional-strategies-and-methods","text":"The basic teaching method of this course will be planned to be face-to-face in the classroom, and support resources, homeworks, and announcements will be shared over google classroom. Students are expected to be in the university. This responsibility is very important to complete this course with success. If pandemic situation changes and distance education is required during this course, this course will be done using synchronous and asynchronous distance education methods. In this scenario, students are expected to be in the online platform, zoom, or meet at the time specified in the course schedule. Attendance will be taken","title":"F. Instructional Strategies and Methods"},{"location":"syllabus/syllabus/#g-late-homework","text":"Throughout the semester, assignments must be submitted as specified by the announced deadline. Overdue assignments will not be accepted. Unexpected situations must be reported to the instructor for late homeworks by students","title":"G. Late Homework"},{"location":"syllabus/syllabus/#h-course-platform-and-communication","text":"Google Classroom and Github will be used as a course learning management system. All electronic resources and announcements about the course will be shared on this platform. It is very important to check the course page daily, access the necessary resources and announcements, and communicate with the instructor to complete the course with success.","title":"H. Course Platform and Communication"},{"location":"syllabus/syllabus/#i-academic-integrity-plagiarism-cheating","text":"Academic Integrity is one of the most important principles of RTE\u00dc University. Anyone who breaches the principles of academic honesty is severely punished. It is natural to interact with classmates and others t.\"study together\". It may also be the case where a student asks to help from someone else, paid or unpaid, better understand a difficult topic or a whole course. However, what is the borderline between \"studying together\" or \"taking private lessons\" and \"academic dishonesty\"? When is it plagiarism, when is it cheating? It is obvious that looking at another student's paper or any source other than what is allowed during the exam is cheating and will be punished. However, it is known that many students come to university with very little experience concerning what is acceptable and what counts as \"copying,\"\" especially for assignments. The following are attempted as guidelines for the Faculty of Engineering and Architecture students to highlight the philosophy of academic honesty for assignments for which the student will be graded. Should a situation arise which is not described below, the student is advised to ask the instructor or assistant of the course whether what they intend to do would remain within the framework of academic honesty or not.","title":"I. Academic Integrity, Plagiarism &amp; Cheating"},{"location":"syllabus/syllabus/#a-what-is-acceptable-when-preparing-an-assignment","text":"Communicating with classmates about the assignment to understand it better Putting ideas, quotes, paragraphs, small pieces of code (snippets) that you find online or elsewhere into your assignment, provided that these are not themselves the whole solution to the assignment, you cite the origins of these Asking sources for help in guiding you for the English language content of your assignment. Sharing small pieces of your assignment in the classroom to create a class discussion on some controversial topics. Turning to the web or elsewhere for instructions, references, and solutions to technical difficulties, but not for direct answers to the assignment Discuss solutions to assignments with others using diagrams or summarized statements but not actual text or code. Working with (and even paying) a tutor to help you with the course, provided the tutor does not do your assignment for you.","title":"a. What is acceptable when preparing an assignment?"},{"location":"syllabus/syllabus/#b-what-is-not-acceptable","text":"Ask a classmate to see their solution to a problem before submitting your own. Failing to cite the origins of any text (or code for programming courses) that you discover outside of the course's lessons and integrate into your work You are giving or showing a classmate your solution to a problem when the classmate is struggling to solve it.","title":"b. What is not acceptable?"},{"location":"syllabus/syllabus/#j-expectations","text":"You are expected to attend classes on time by completing weekly course requirements (readings and assignments) during the semester. The main communication channel between the instructor and the students email emailed. Please send your questions to the instructor's email address about the course via the email address provided to you by the university. Ensure that you include the course name in the subject field of your message and your name in the text field . In addition, the instructor will contact you via email if necessary. For this reason, it is very important to check your email address every day for healthy communication.","title":"J. Expectations"},{"location":"syllabus/syllabus/#k-lecture-content-and-syllabus-updates","text":"If deemed necessary, changes in the lecture content or course schedule can be made. If any changes are made in the scope of this document, the instructor will inform you about this.","title":"K. Lecture Content and Syllabus Updates"},{"location":"syllabus/syllabus/#course-schedule-overview","text":"Weeks Dates Subjects Other Tasks Week 1 21.02.2022-24.02.2022 Course Plan and Communication Grading System, Assignments, and Exams. Software and Software Engineering Object Orientation and OOP with Java Part-I(Classes, Objects, Methods,Inheritance,Access Modifiers,This and InstanceOf Keywords) TBD Week 2 28.02.2022-03.03.2022 OOP with Java Part-II (super keyword, final keyword, Polymorphism / Encapsulation, Method Overriding, Nested Inner Class, Static Class, Anonymous Class, Enums / Enum-Constructor / Enum-String, Abstract Class, Object Class, Forms of Inheritance, Benefits, and Costs of Inheritance, Packages, Access Protection in Packages TBD Week 3 07.03.2022-10.03.2022 OOP with Java Part-III(Defining and Interface and Interface Implementation, Nested Interfaces, Variables in Interfaces, Extending Interfaces, Reflection, Wrapper Classes, Lambda Notation) TBD Week 4 14.03.2022-17.03.2022 UML (UML tools, UML building blocks, architecture, diagrams, relationship, association, aggregation, composition comparison, association, dependency, generalization, realization, class diagram, object diagram, component diagram, deployment diagram, interaction diagram, use-case diagram, sequence diagram, collaboration diagram, state-machine diagram, activity diagram, timing diagram) TBD Week 5 21.03.2022-24.03.2022 Plantuml and Examples TBD Week-6 28.03.2022-31.03.2022 UMPLE and Examples TBD Week-7 04.04.2022-07.04.2022 UMPLE and Examples TBD Week-8 09.04.2022-17.04.2022 Midterm TBD Week-9 18.04.2022-21.04.2022 Using Design Patterns TBD Week-10 25.04.2022-28.04.2022 Using Design Patterns TBD Week-11 02.05.2022-05.05.2022 Holiday TBD Week-12 09.05.2022-12.05.2022 UML + UMPLE + Java Implementations TBD Week-13 16.05.2022-19.05.2022 SMC Remote Service Case Study Part-I TBD Week-14 23.05.2022-26.05.2022 SMC Remote Service Case Study Part-II TBD Week-15 30.05.2022-02.06.2022 OOP ATM Case Study Part-I TBD Week-16 06.06.2022-09.06.2022 OOP ATM Case Study Part-II TBD Week-17 13.06.2022-26.06.2022 Final \\(End-Of-Object-Oriented-Programming-Syllabus\\)","title":"Course Schedule Overview"},{"location":"week-1/ce102-week-1/","text":"CE102 Digital Logic Design \u00b6 Week-1 (Part-1 Binary Systems) \u00b6 Spring Semester, 2021-2022 \u00b6 Download DOC , SLIDE , PPTX Binary Systems \u00b6 Binary Systems \u00b6 Analog Vs Digital Digital Systems Binary numbers Number base conversions Compliments Octal and Hexadecimal Numbers Signed Binary Numbers Analog and Digital \u00b6 Analog information is made up of a continuum of - values within a given range. At its most basic, digital information can - assume only one of two possible values: one/- zero, on/off, high/low, true/false, etc. Digital Information is less susceptible to - noise than analog information \u2022 Exact - voltage values are not important, only their - class (1 or 0) The complexity of operations is reduced, thus - it is easier to implement them with high - accuracy in digital form. References \u00b6 \\(End-Of-Week-1-Module\\)","title":"Week-1 (Binary Systems)"},{"location":"week-1/ce102-week-1/#ce102-digital-logic-design","text":"","title":"CE102 Digital Logic Design"},{"location":"week-1/ce102-week-1/#week-1-part-1-binary-systems","text":"","title":"Week-1 (Part-1 Binary Systems)"},{"location":"week-1/ce102-week-1/#spring-semester-2021-2022","text":"Download DOC , SLIDE , PPTX","title":"Spring Semester, 2021-2022"},{"location":"week-1/ce102-week-1/#binary-systems","text":"","title":"Binary Systems"},{"location":"week-1/ce102-week-1/#binary-systems_1","text":"Analog Vs Digital Digital Systems Binary numbers Number base conversions Compliments Octal and Hexadecimal Numbers Signed Binary Numbers","title":"Binary Systems"},{"location":"week-1/ce102-week-1/#analog-and-digital","text":"Analog information is made up of a continuum of - values within a given range. At its most basic, digital information can - assume only one of two possible values: one/- zero, on/off, high/low, true/false, etc. Digital Information is less susceptible to - noise than analog information \u2022 Exact - voltage values are not important, only their - class (1 or 0) The complexity of operations is reduced, thus - it is easier to implement them with high - accuracy in digital form.","title":"Analog and Digital"},{"location":"week-1/ce102-week-1/#references","text":"\\(End-Of-Week-1-Module\\)","title":"References"}]}